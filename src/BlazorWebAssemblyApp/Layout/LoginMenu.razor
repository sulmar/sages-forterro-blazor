@using BlazorWebAssemblyApp.Providers
@inject IAuthService Api
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

<AuthorizeView>
    <Authorized Context="auth">
        👤 @auth.User.Identity?.Name
        <!-- np. "john" -->

        <UserRolesBadge />

        <button @onclick="@Logout" class="btn btn-danger btn-sm">Logout</button>
    </Authorized>
    <NotAuthorized>
        <input @bind="@Username" placeholder="login" class="form-control form-control-sm" />
        <input @bind="@Password" placeholder="password" class="form-control form-control-sm" />
        <button @onclick="@Login" class="btn btn-primary btn-sm">Login</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string Username = string.Empty;
    private string Password = string.Empty;

    private async Task Login()
    {
        var result = await Api.LoginAsync(Username, Password);

        if (result is not null)
        {
            if (AuthStateProvider is CustomAuthenticationStateProvider provider)
            {
                await provider.NotifyUserAuthenticationAsync(result.AccessToken);
            }

            StateHasChanged();
        }
    }

    private async Task Logout()
    {
        if (AuthStateProvider is CustomAuthenticationStateProvider provider)
        {
            await provider.NotifyUserLogoutAsync();

            Navigation.NavigateTo("/");
        }

    }

}
